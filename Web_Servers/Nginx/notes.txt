##### NGINX Files and Directories
      - /etc/nginx is the default configuration root for the nginx server...
          . nginx.conf: default config entrypoint...its set global settings for things like" worker processes, logging..etc"...
          .  conf.d: contains the default http server config...

      - /var/log/nginx  : is the default log location...
           .  acces.log : contains an entry for each request
           . error.log : contains errors events and debug info

#### Useful Commands:
      - nginx -h :shows the nginx help manu
      - nginx -v : showns nginx version
      - nginx -V ; shows more ingormations including the nginx version...
      - nginx -t : test the nginx configuration
      - nginx -T : test nginx config
      - nginx -s reload :  reload the configuration...   

##### Serving Static content



1- install nginx
2- rename the default file in /etc/nginx/sites-available 
3- create a  new configuration file in sites-available directory with the example content below:
    
            # HTTP (non-SSL) configuration to redirect to HTTPS
            server {
            listen 80;
            server_name bonnyzone.site www.bonnyzone.site;

            # Redirect HTTP to HTTPS
            return 301 https://$host$request_uri;
            }

            # HTTPS (SSL) configuration
            server {
            listen 443 ssl;
            server_name bonnyzone.site www.bonnyzone.site;

            # Path to your SSL certificate and key
            ssl_certificate /etc/letsencrypt/live/bonnyzone.site/fullchain.pem;
            ssl_certificate_key /etc/letsencrypt/live/bonnyzone.site/privkey.pem;

            # SSL settings for better security
            ssl_protocols TLSv1.2 TLSv1.3;
            ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA256';
            ssl_prefer_server_ciphers on;

            # Other SSL settings to prevent SSL vulnerabilities
            ssl_session_cache shared:SSL:10m;
            ssl_session_timeout 1d;
            ssl_session_tickets off;
            #  ssl_dhparam /etc/ssl/certs/dhparam.pem;

            root /var/www/bonnyzone.site;
            index index.html foss.html index2.html index.htm;

            error_page 404 /404.html;
            error_page 500 502 503 504 /50x.html;

            location /foss {
                  auth_basic "Restricted Content";
                  auth_basic_user_file /etc/nginx/.htpasswd;
                  alias /var/www/bonnyzone.site/foss.html;
                  default_type text/html;
            }

            location /index2 {
                  alias /var/www/bonnyzone.site/index2.html;
                  default_type text/html;
            }

            location / {
                  try_files $uri $uri/ =404;
            }

            gzip on;
            gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

            client_max_body_size 10M;

            access_log /var/log/nginx/access.log;
            error_log /var/log/nginx/error.log;
            }


4- make sure the root directory specified in the content provided above exist...
   make sure that the user(usually www-data or nginx) who runs nginx processes  have read and execute access to that root file...
   ( shown -R www-data:www-data <path to the root directory specified && chmod -R 500 <path to the root directory specified)...
   ( shown -R root:www-data <path to the root directory specified && chmod -R 750 <path to the root directory specified)...

5- create symbolic link of your config fileb in /etc/nginx/sites-enabled by running the below command:
     ln -s /etc/nginx/sites-available/<your-config-file>  /etc/nginx/sites-enabled...
6-then open a browser with the server name specified in your config file to access your website...    


#### Basic authenticaion through ht.passwd:

    1- Install Apache Utils :
        sudo apt-get install apache2-utils...

    2-  create a password file by running: 
        sudo htpasswd -c /etc/nginx/.htpasswd username...# -c create the file .omit if you want to add more users...  
    3- optional: add more users...

         sudo htpasswd /etc/nginx/.htpasswd anotheruser...
    4- secure the passwd file:
           sudo chmod 640 /etc/nginx/.htpasswd
           sudo chown root:www-data /etc/nginx/.htpasswd  

    5- update your nginx configuration file by adding the below configuration:

          location /foss {
            auth_basic "Restricted Content";
            auth_basic_user_file /etc/nginx/.htpasswd;  # Path to your password file
            alias /var/www/bonnyzone.site/foss.html;
            default_type text/html;
         } 

     6- reload nginx:  nginx -s reload or sudo systemctl reload nginx        


#####   NGINX has 2 main configuration files:
             - /etc/nginx/nginx.conf that contains the main server configuration
             - /etc/nginx/default.conf which defines a basic site out of the box for you...


