######### In Bash, you can declare arrays in several ways... 

1. Declare an Array Using Parentheses
    You can declare and initialize an array using parentheses:

        my_array=(value1 value2 value3)



2. Declare an Empty Array and Add Elements Later
    You can declare an empty array and add elements individually:

        my_array=()

        # Add elements:
        my_array+=("value1")
        my_array+=("value2")



3. Declare an Array Using the declare Command
    You can use the declare command to explicitly declare an array:
        # Declare an array:
            declare -a my_array=(value1 value2 value3)


4. Declare an Array with Indices
    You can specify indices explicitly when declaring an array:
        # Declare an array with specific indices:
            my_array[0]="value1"
            my_array[1]="value2"
            my_array[2]="value3"


5. Declare an Indexed Array from a String
    You can convert a space-separated string into an array:
        # Convert a string to an array:
            string="value1 value2 value3"
            my_array=($string)

        Example of Accessing Array Elements:
        Once youâ€™ve declared an array, you can access its elements using indices:
            echo "${my_array[0]}"  # Outputs: value1
            echo "${my_array[1]}"  # Outputs: value2


        Looping Through an Array:
        You can loop through the elements of an array using a for loop:

            for value in "${my_array[@]}"; do
                echo "$value"
            done


